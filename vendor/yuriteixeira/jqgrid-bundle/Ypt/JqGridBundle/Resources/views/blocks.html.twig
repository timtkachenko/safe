{% block jqgrid_definition %}

// Definitions ({{ gridView.gridModel.name }})
var gridSelector            = '#{{ gridView.gridModel.name|raw }}' + (typeof rowId !== 'undefined' ? '_' + rowId : '');
var gridWrapperSelector     = gridSelector + '_wrapper';
var gridPagerSelector       = gridSelector + '_pager';
var gridResetSelector       = gridSelector + '_reset';

var gridOptions = $.extend(
    {
        url:        '{{ gridView.gridModel.url }}' + (typeof rowId !== 'undefined' ? '?id=' + rowId : ''),
        colNames:   {{ gridView.columnsNames|raw }},
        colModel:   {{ gridView.getColumnsModels|raw }},
        caption:    '{{ gridView.gridModel.caption }}',
        pager:      gridPagerSelector,

        {# TODO: Apply instanceof comparision, when available on Twig #}
        {% if gridView.gridModel.subGrid %}
            subGrid: true,
            subGridRowExpanded: function(subGridId, rowId) {
                var subGridTableId = '{{ gridView.gridModel.subGrid.name }}_' + rowId;
                var subGridPagerId = '{{ gridView.gridModel.subGrid.name }}_' + rowId + '_pager';

                jQuery("#" + subGridId)
                    .html('<table id="' + subGridTableId + '" class="scroll"></table>')
                    .append('<div id="' + subGridPagerId + '"></div>');

                // --- SubGrid Creation ({{ gridView.gridModel.subGrid.name }}) ---
                {% set subGridRenderResult = gridView.gridModel.subGrid.render() %}
                {% set subGridView = subGridRenderResult.gridView %}

                {{ jqgrid_definition(subGridView) }}
            }
        {% else %}
            subGrid: false
        {% endif %}
    },

    {{ gridView.gridOptions|raw }}
);

// Instance ({{ gridView.gridModel.name }})
$(gridSelector)
    .jqGrid(gridOptions)
    .navGrid(
        gridPagerSelector,
        {{ gridView.navigationOptions|raw }}
    )
    .navSeparatorAdd(gridPagerSelector, {
        sepclass: 'ui-separator',
        sepcontent: ''
    })
    .navButtonAdd(gridPagerSelector, {
        id: gridResetSelector,
        caption: '',
        buttonicon: 'ui-icon-home',
        onClickButton: null,
        position: 'last',
        title: '{{ 'grid.filter.clear'|trans }}',
        cursor: 'pointer'
    })
    .filterToolbar({
        stringResult: true,
        searchOnEnter: true,
        defaultSearch: "eq"
    })
;

$(gridResetSelector).click(function () {
    $(gridSelector).get(0).clearToolbar();
});
{% endblock %}



{% block jqgrid_html %}
<div id="{{ gridView.gridModel.name|raw }}_wrapper">
    <table class="ypt_jqgrid" id="{{ gridView.gridModel.name|raw }}"></table>
    <div id="{{ gridView.gridModel.name|raw }}_pager"></div>
</div>
{% endblock %}



{% block jqgrid_js %}
<script type="text/javascript">
jqGridInclude(function(){

    (function ($) {
        'use strict';
        // --- Begin ---

        $(function () {
            var now = new Date();
            var baseYear = now.getFullYear();

            var openDatePickerFilter = function(el) {
                $(el).datepicker(datePickerConfig);
            };

            var datePickerConfig = $.extend(
                $.datepicker.regional[
                    '{{ gridView.gridModel.culture|replace({'_': '-'}) }}'
                ],

                {
                    minDate: new Date(baseYear - 10, 0, 1),
                    maxDate: new Date(baseYear + 10, 11, 31),
                    dateFormat: '{{ gridView.gridModel.datePickerFormat }}',
                    showButtonPanel: true,
                    changeYear: true,
                    changeMonth: true,
                    closeText: '{{ 'datepicker.close'|trans }}',

                    onSelect: function (dateString, instance) {
                        var fullGridId = $(this).closest('.ui-jqgrid-view').attr('id');
                        var shortGridId = fullGridId.substring(6);

                        $('#' + shortGridId).get(0).triggerToolbar();
                    }
                }
            );
            // --- Grid Creation ---
            {{ jqgrid_definition(gridView) }}
            $(window)
                .resize(function() {
                    var gridWrapperWidth = $(gridWrapperSelector).width();
                    $(gridSelector).setGridWidth(gridWrapperWidth);
                })
                .trigger('resize');
        });
    }(jQuery));
});

</script>
{% endblock %}



{% block jqgrid %}
{{ block("jqgrid_html") }}
{{ block("jqgrid_js") }}
{% endblock %}


